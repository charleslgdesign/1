{"ast":null,"code":"import React from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var img1='/img/grid-development-2.png';var img2='/img/amazon-screenshot.png';var img3='/img/grid-development-3.png';var img4='/img/screen-query-sketch.png';function GridConcept(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-block\",children:[\"In my wireframing for the grid, I found that the ideal amount of products on the page needed a ratio of roughly \",/*#__PURE__*/_jsx(\"b\",{children:\"2:3.\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"img\",{className:\"small-image\",src:img2}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),\"This is because when I looked at similar outputs such as Amazon's grid, there is use of the golden ratio of thirds in the design. However, there is definitely a maticulously cluttered feeling of the layout that could be attributed to a dark pattern.\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),\"This was interesting to me since I assumed the \",/*#__PURE__*/_jsx(\"b\",{children:\"Golden Ratio\"}),\" was only useful for aesthetics, however it's very relevant to \",/*#__PURE__*/_jsx(\"b\",{children:\"balance\"}),\" when designing UI.\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),\"In order to make the website simple and cohesive I planned out 3 layouts that the screen snaps to, depending on the screen size. When planning this out I first found the 3 most common dimensions for mobile, tablet, and desktop.\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),\"When I looked into responsive design. There was a research gap into the optimal way to design a layout with only 3 options. In order to get a range for each screen size query I did brief research into the minimum and maximum dimensions for each medium.\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{})]}),/*#__PURE__*/_jsx(\"img\",{className:\"sketch\",src:img1}),/*#__PURE__*/_jsx(\"img\",{className:\"sketch\",src:img3}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-block\",children:[\"The use of 2:3 ratio was applied to 3 main settings of the grid. These were \",/*#__PURE__*/_jsx(\"b\",{children:\"Mobile\"}),\", \",/*#__PURE__*/_jsx(\"b\",{children:\"Tablet\"}),\" , and \",/*#__PURE__*/_jsx(\"b\",{children:\"Desktop.\"}),\" This constitutes the following column setting: 1 item in Mobile, 3 in Tablet, and lastly 4 in Desktop.  \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),\"In my initial research, I devised a set of grid meassurements that would help keep the different grid setting to run at the best possible performance. These were merely a guide, that were re adjusted when it came to practically applying them in react. I created the first dimensions by colating multiple averages for screen sizes. Through this process, I found the most \",/*#__PURE__*/_jsx(\"b\",{children:\"normal (average)\"}),\" screen sizes that I based my grid designs around. These were:\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"b\",{children:\"Mobile:\"}),/*#__PURE__*/_jsx(\"br\",{}),\"min width = 320\",/*#__PURE__*/_jsx(\"br\",{}),\"average width = 384\",/*#__PURE__*/_jsx(\"br\",{}),\"max width = 480\",/*#__PURE__*/_jsx(\"br\",{}),\"min height = 570\",/*#__PURE__*/_jsx(\"br\",{}),\"average height = 821\",/*#__PURE__*/_jsx(\"br\",{}),\"max height = 1080\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"b\",{children:\"Tablet:\"}),/*#__PURE__*/_jsx(\"br\",{}),\"min width = 480\",/*#__PURE__*/_jsx(\"br\",{}),\"average width = 745\",/*#__PURE__*/_jsx(\"br\",{}),\"max width = 767\",/*#__PURE__*/_jsx(\"br\",{}),\"min height = 600\",/*#__PURE__*/_jsx(\"br\",{}),\"average height = 821\",/*#__PURE__*/_jsx(\"br\",{}),\"max height = 1280\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"b\",{children:\"Desktop:\"}),/*#__PURE__*/_jsx(\"br\",{}),\"min width = 1280\",/*#__PURE__*/_jsx(\"br\",{}),\"average width = 1645\",/*#__PURE__*/_jsx(\"br\",{}),\"max width = 1645\",/*#__PURE__*/_jsx(\"br\",{}),\"min height = 720\",/*#__PURE__*/_jsx(\"br\",{}),\"average height = 964\",/*#__PURE__*/_jsx(\"br\",{}),\"max height = 964\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),\"This is shown in the following diagram below.\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"img\",{className:\"sketch\",src:img4}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{})]})]});}export default GridConcept;","map":{"version":3,"names":["React","img1","img2","img3","img4","GridConcept"],"sources":["/Users/charleslynchgerrard/Desktop/1/1/src/GridConcept.js"],"sourcesContent":["import React from 'react'\n\nconst img1 = '/img/grid-development-2.png'\nconst img2 = '/img/amazon-screenshot.png'\nconst img3 = '/img/grid-development-3.png'\nconst img4 = '/img/screen-query-sketch.png'\n\n\n\n\nfunction GridConcept() {\n  return (\n    <div><div className='text-block'>In my wireframing for the grid, I found that the ideal amount of products on the page needed a ratio of roughly <b>2:3.</b>\n    <br/>\n    <br/><img className='small-image' src={img2}/><br/><br/>This is because when I looked at similar outputs such as Amazon's grid, there is use of the golden ratio of thirds in the design. However, there is definitely a maticulously cluttered feeling of the layout that could be attributed to a dark pattern.<br/><br/>\n    This was interesting to me since I assumed the <b>Golden Ratio</b> was only useful for aesthetics, however it's very relevant to <b>balance</b> when designing UI. \n    <br/>\n    <br/>\n    In order to make the website simple and cohesive I planned out 3 layouts that the screen snaps to, depending on the screen size. \n\nWhen planning this out I first found the 3 most common dimensions for mobile, tablet, and desktop. \n\n<br/><br/>\n\nWhen I looked into responsive design. There was a research gap into the optimal way to design a layout with only 3 options. In order to get a range for each screen size query I did brief research into the minimum and maximum dimensions for each medium. \n    <br/>\n    <br/> \n    \n    </div><img className='sketch' src={img1}/>\n    <img className='sketch' src={img3}/>\n      <div className='text-block' >The use of 2:3 ratio was applied to 3 main settings of the grid. These were <b>Mobile</b>, <b>Tablet</b> , and <b>Desktop.</b> This constitutes the following column setting: 1 item in Mobile, 3 in Tablet, and lastly 4 in Desktop.  <br/><br/>\n      In my initial research, I devised a set of grid meassurements that would help keep the different grid setting to run at the best possible performance. These were merely a guide, that were re adjusted when it came to practically applying them in react. I created the first dimensions by colating multiple averages for screen sizes. \n      Through this process, I found the most <b>normal (average)</b> screen sizes that I based my grid designs around. These were: \n      <br/><br/>\n      <b>Mobile:</b>\n      <br/>min width = 320\n      <br/>average width = 384\n      <br/>max width = 480\n\n      <br/>min height = 570\n      <br/>average height = 821\n      <br/>max height = 1080\n      <br/><br/>\n      <b>Tablet:</b>\n      <br/>min width = 480 \n      <br/>average width = 745\n      <br/>max width = 767\n      <br/>min height = 600\n      <br/>average height = 821\n      <br/>max height = 1280\n      <br/><br/>\n      <b>Desktop:</b>\n      <br/>min width = 1280\n      <br/>average width = 1645\n      <br/>max width = 1645\n      <br/>min height = 720\n      <br/>average height = 964\n      <br/>max height = 964\n      <br/>\n      <br/>\n      This is shown in the following diagram below. \n      <br/>\n      <br/>\n\n\n\n\n      <img className='sketch' src={img4}/><br/><br/></div></div>\n  )\n}\n\nexport default GridConcept"],"mappings":"AAAA,MAAOA,MAAK,KAAM,OAAO,yFAEzB,GAAMC,KAAI,CAAG,6BAA6B,CAC1C,GAAMC,KAAI,CAAG,4BAA4B,CACzC,GAAMC,KAAI,CAAG,6BAA6B,CAC1C,GAAMC,KAAI,CAAG,8BAA8B,CAK3C,QAASC,YAAW,EAAG,CACrB,mBACE,oCAAK,aAAK,SAAS,CAAC,YAAY,2IAAiH,2BAAW,cAC5J,aAAK,cACL,aAAK,0BAAK,SAAS,CAAC,aAAa,CAAC,GAAG,CAAEH,IAAK,EAAE,2BAAK,2BAAK,0QAAyP,aAAK,2BAAK,gEAC5Q,mCAAmB,gFAA+D,8BAAc,oCAC/I,aAAK,cACL,aAAK,oPAKT,aAAK,2BAAK,6QAGN,aAAK,cACL,aAAK,GAEC,0BAAK,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAED,IAAK,EAAE,cAC1C,YAAK,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAEE,IAAK,EAAE,cAClC,aAAK,SAAS,CAAC,YAAY,uGAA8E,6BAAa,mBAAE,6BAAa,wBAAO,+BAAe,0HAAyG,aAAK,2BAAK,mYAEvO,uCAAuB,+EAC9D,aAAK,2BAAK,cACV,8BAAc,cACd,aAAK,gCACL,aAAK,oCACL,aAAK,gCAEL,aAAK,iCACL,aAAK,qCACL,aAAK,kCACL,aAAK,2BAAK,cACV,8BAAc,cACd,aAAK,gCACL,aAAK,oCACL,aAAK,gCACL,aAAK,iCACL,aAAK,qCACL,aAAK,kCACL,aAAK,2BAAK,cACV,+BAAe,cACf,aAAK,iCACL,aAAK,qCACL,aAAK,iCACL,aAAK,iCACL,aAAK,qCACL,aAAK,iCACL,aAAK,cACL,aAAK,8DAEL,aAAK,cACL,aAAK,cAKL,YAAK,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAEC,IAAK,EAAE,2BAAK,2BAAK,GAAM,GAAM,CAEhE,CAEA,cAAeC,YAAW"},"metadata":{},"sourceType":"module"}